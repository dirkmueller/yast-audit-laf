/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:	clients/audit-laf.ycp
 * Package:	Configuration of audit-laf
 * Summary:	Main file
 * Authors:	Gabriele Mohr <gs@suse.de>
 *
 *
 * Main file for audit-laf configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of audit-laf</h3>
 */

textdomain "audit-laf";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("yast2-audit-laf module started");

import "Progress";
import "Report";
import "Summary";

import "CommandLine";

include "audit-laf/wizards.ycp";
include "audit-laf/cmdline.ycp";

map cmdline_description =
    $[
      "id" 	: "audit-laf",
      /* Command line help text for the audit-laf module */
      "help"	: _("Configuration of Linux Audit Framework (LAF)"),
      "guihandler": AuditLafSequence,
      "initialize": AuditLaf::Read,
      "finish"    : AuditLaf::Write,
      "actions"   : $[
		      "show" 	:$[
				   "handler"	: ShowHandler,
				   // translators: command line help text for show action
				   "help"	: _("Show information about audit settings")

				   ],
		      "set"   	:$[
				   "handler"	: SettingsHandler,
				   // translators: command line help text for set action
				   "help"	: _("Set the specified option"),
				   //"options"   	: ["non_strict"],
				   // help text for additional parameter name
				   //"non_strict_help":	_("Use keywords and values specified in 'man auditd.conf'")
				   ]
		      ],
      "options"	: $[
		    "logfile"	:$[
				   // translators: command line help text for show logfile option
				   "help"	: _("Show log file settings")
				   ],
		    "diskspace"	:$[
				   // translators: command line help text for show disk space option
				   "help"	: _("Show disk space settings")
				   ],
		    "log_file"  :$[
				  // translators: command line help text for log_file option
				  "help"	: _("Name of the log file (full path name)"),
				  "type"	: "string"
				  ],
		    "log_format":$[
				   // translators: command line help text for log_format option
				   // (do NOT translate: RAW, NOLOG)
				   "help"	: _("Log format (RAW, NOLOG)"),
				   "type"	: "string"
				   ],
		    "flush"	:$[
				  // translators: command line help text for flush option
				  // (do NOT translate: INCREMENTAL, NONE, DATA, SYNC)
				  "help"	: _("How to write data to disk (INCREMENTAL, NONE, DATA, SYNC)"),
				  "type"	: "string"
				  ],
		    "freq"	:$[
				   // translators: command line help text for frequency option
				   // (do NOT translate: INCREMENTAL, NONE, DATA, SYNC)
				   "help"	: _("How many records to write before a flush to disk is issued"),
				   "type"	: "string"
				   ],
    		    "max_log_file":$[
				     // translators: command line help text for max_log_file option
				     "help"	: _("Maximal size (in MByte) of the log file"),
				     "type"	: "string"
				     ],
		    "max_log_file_action":$[
					    // translators: command line help text for max_log_file_action option
					    // (do NOT translate: IGNORE, SYSLOG, SUSPEND, ROTATE, KEEP_LOGS)
					    "help"	: _("Action if max_log_file is reached (IGNORE, SYSLOG, SUSPEND, ROTATE, KEEP_LOGS)"),
					    "type"	: "string"
					    ],
		    "num_logs"	:$[
				   // translators: command line help text for num_logs option
				   "help"	: _("Number of log files to keep"),
				   "type"	: "string"
				   ],
		    "name_format":$[
				    // translators: command line help text for name_format option
				     // (do NOT translate: NONE, HOSTNAME, FQD, USER)
				    "help"	: _("Computer name format (NONE, HOSTNAME, FQD, USER)"),
				    "type"	: "string"
				    ],
		    "name"      :$[
				   // translators: command line help text for name_format option
				   "help"	: _("Computer name (used if format is set to USER)"),
				   "type"	: "string"
				   ],
				   
		    "space_left":$[
				   // translators: command line help text for space_left option
				   "help"	: _("Space left on log partition (in MByte) starts to run low"),
				   "type"	: "string"
				   ],
		    "space_left_action":$[
					  // translators: command line help text for space_left_action option
					  // (do NOT translate: IGNORE, SYSLOG, SUSPEND, SINGLE, HALT, EXEC, EMAIL)
					  "help"	: _("Action if space_left is reached (IGNORE, SYSLOG, SUSPEND, SINGLE, HALT, EXEC <full path to script>, EMAIL)"),
					  "type"	: "string"
					  ],
		    "admin_space_left":$[
					 // translators: command line help text for admin_space_left
					 "help"	: _("Disk space to on log partition (in MByte) is running low"),
					 "type"	: "string"	 
					 ],
	   	    "admin_space_left_action":$[
						// command line help text for admin_space_left_action option
						// (do NOT translate: IGNORE, SYSLOG, SUSPEND, SINGLE, HALT, EXEC, EMAIL)
						"help"	: _("Action if admin_space_left is reached (IGNORE, SYSLOG, SUSPEND, SINGLE, HALT, EXEC <full path to script>, EMAIL)"),
						"type"	: "string"
						],
		    "action_mail_acct":$[
					 // command line help text for action_mail_acct option
					 "help"	: _("Mail sent to this account (if space_left_action set to EMAIL)"),
					 "type"	: "string" 
					 ],
		    "disk_full_action":$[
					 // command line help text for disk_full_action option
					 "help"	: _("Action to perform if disk is full (IGNORE, SYSLOG, SUSPEND, SINGLE, HALT, EXEC <full path to script>)"),
					 "type"	: "string" 
					 ],
		    "disk_error_action":$[
					  // command line help text for disk_error_action option
					  "help"	: _("Action to perform on disk error (IGNORE, SYSLOG, SUSPEND, SINGLE, HALT, EXEC <full path to script>)"),
					  "type"	: "string" 	  
					  ]
		    ],
      "mappings": $[
		    "show"  : [ "logfile", "diskspace" ],
		    "set"   : [ "log_file", "log_format", "flush", "freq", "max_log_file", "max_log_file_action",
				"num_logs", "name_format", "name", "space_left", "space_left_action","admin_space_left",
				"admin_space_left_action", "action_mail_acct",  "disk_full_action",  "disk_error_action" ]
		    ]
      ];

/* is this proposal or not? */
boolean propose = false;
list args = WFM::Args();
if(size(args) > 0) {
    if(is(WFM::Args(0), path) && WFM::Args(0) == .propose) {
        y2milestone("Using PROPOSE mode");
        propose = true;
    }
}

/* main ui function */
any ret = nil;

if(propose) ret = AuditLafAutoSequence();
else ret = CommandLine::Run(cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("yast2-audit-laf module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
